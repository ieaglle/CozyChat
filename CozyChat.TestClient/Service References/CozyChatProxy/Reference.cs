//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CozyChat.TestClient.CozyChatProxy {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ChatRoom", Namespace="http://schemas.datacontract.org/2004/07/CozyChat.Model")]
    [System.SerializableAttribute()]
    public partial class ChatRoom : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime CreatedDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CozyChat.TestClient.CozyChatProxy.User CreatorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CreatorIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCurrentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CozyChat.TestClient.CozyChatProxy.Message[] MessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CozyChat.TestClient.CozyChatProxy.User[] UsersField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime CreatedDate {
            get {
                return this.CreatedDateField;
            }
            set {
                if ((this.CreatedDateField.Equals(value) != true)) {
                    this.CreatedDateField = value;
                    this.RaisePropertyChanged("CreatedDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CozyChat.TestClient.CozyChatProxy.User Creator {
            get {
                return this.CreatorField;
            }
            set {
                if ((object.ReferenceEquals(this.CreatorField, value) != true)) {
                    this.CreatorField = value;
                    this.RaisePropertyChanged("Creator");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CreatorId {
            get {
                return this.CreatorIdField;
            }
            set {
                if ((this.CreatorIdField.Equals(value) != true)) {
                    this.CreatorIdField = value;
                    this.RaisePropertyChanged("CreatorId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsCurrent {
            get {
                return this.IsCurrentField;
            }
            set {
                if ((this.IsCurrentField.Equals(value) != true)) {
                    this.IsCurrentField = value;
                    this.RaisePropertyChanged("IsCurrent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CozyChat.TestClient.CozyChatProxy.Message[] Messages {
            get {
                return this.MessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.MessagesField, value) != true)) {
                    this.MessagesField = value;
                    this.RaisePropertyChanged("Messages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CozyChat.TestClient.CozyChatProxy.User[] Users {
            get {
                return this.UsersField;
            }
            set {
                if ((object.ReferenceEquals(this.UsersField, value) != true)) {
                    this.UsersField = value;
                    this.RaisePropertyChanged("Users");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/CozyChat.Model")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CozyChat.TestClient.CozyChatProxy.ChatRoom[] ChatRoomsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LastSeenDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CozyChat.TestClient.CozyChatProxy.Message[] ReceivedMessagesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime RegisteredDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CozyChat.TestClient.CozyChatProxy.Message[] SentMessagesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CozyChat.TestClient.CozyChatProxy.ChatRoom[] ChatRooms {
            get {
                return this.ChatRoomsField;
            }
            set {
                if ((object.ReferenceEquals(this.ChatRoomsField, value) != true)) {
                    this.ChatRoomsField = value;
                    this.RaisePropertyChanged("ChatRooms");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LastSeenDate {
            get {
                return this.LastSeenDateField;
            }
            set {
                if ((this.LastSeenDateField.Equals(value) != true)) {
                    this.LastSeenDateField = value;
                    this.RaisePropertyChanged("LastSeenDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CozyChat.TestClient.CozyChatProxy.Message[] ReceivedMessages {
            get {
                return this.ReceivedMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceivedMessagesField, value) != true)) {
                    this.ReceivedMessagesField = value;
                    this.RaisePropertyChanged("ReceivedMessages");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime RegisteredDate {
            get {
                return this.RegisteredDateField;
            }
            set {
                if ((this.RegisteredDateField.Equals(value) != true)) {
                    this.RegisteredDateField = value;
                    this.RaisePropertyChanged("RegisteredDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CozyChat.TestClient.CozyChatProxy.Message[] SentMessages {
            get {
                return this.SentMessagesField;
            }
            set {
                if ((object.ReferenceEquals(this.SentMessagesField, value) != true)) {
                    this.SentMessagesField = value;
                    this.RaisePropertyChanged("SentMessages");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/CozyChat.Model")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CozyChat.TestClient.CozyChatProxy.ChatRoom ChatRoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ChatRoomIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsReadField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CozyChat.TestClient.CozyChatProxy.User ReceiverField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReceiverIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private CozyChat.TestClient.CozyChatProxy.User SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SenderIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime SentDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CozyChat.TestClient.CozyChatProxy.ChatRoom ChatRoom {
            get {
                return this.ChatRoomField;
            }
            set {
                if ((object.ReferenceEquals(this.ChatRoomField, value) != true)) {
                    this.ChatRoomField = value;
                    this.RaisePropertyChanged("ChatRoom");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ChatRoomId {
            get {
                return this.ChatRoomIdField;
            }
            set {
                if ((this.ChatRoomIdField.Equals(value) != true)) {
                    this.ChatRoomIdField = value;
                    this.RaisePropertyChanged("ChatRoomId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsRead {
            get {
                return this.IsReadField;
            }
            set {
                if ((this.IsReadField.Equals(value) != true)) {
                    this.IsReadField = value;
                    this.RaisePropertyChanged("IsRead");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CozyChat.TestClient.CozyChatProxy.User Receiver {
            get {
                return this.ReceiverField;
            }
            set {
                if ((object.ReferenceEquals(this.ReceiverField, value) != true)) {
                    this.ReceiverField = value;
                    this.RaisePropertyChanged("Receiver");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReceiverId {
            get {
                return this.ReceiverIdField;
            }
            set {
                if ((this.ReceiverIdField.Equals(value) != true)) {
                    this.ReceiverIdField = value;
                    this.RaisePropertyChanged("ReceiverId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public CozyChat.TestClient.CozyChatProxy.User Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SenderId {
            get {
                return this.SenderIdField;
            }
            set {
                if ((this.SenderIdField.Equals(value) != true)) {
                    this.SenderIdField = value;
                    this.RaisePropertyChanged("SenderId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime SentDate {
            get {
                return this.SentDateField;
            }
            set {
                if ((this.SentDateField.Equals(value) != true)) {
                    this.SentDateField = value;
                    this.RaisePropertyChanged("SentDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CozyChatProxy.ICozyChatService")]
    public interface ICozyChatService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICozyChatService/GetChatRooms", ReplyAction="http://tempuri.org/ICozyChatService/GetChatRoomsResponse")]
        CozyChat.TestClient.CozyChatProxy.ChatRoom[] GetChatRooms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICozyChatService/GetChatRooms", ReplyAction="http://tempuri.org/ICozyChatService/GetChatRoomsResponse")]
        System.Threading.Tasks.Task<CozyChat.TestClient.CozyChatProxy.ChatRoom[]> GetChatRoomsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICozyChatService/CreateChatRoom", ReplyAction="http://tempuri.org/ICozyChatService/CreateChatRoomResponse")]
        CozyChat.TestClient.CozyChatProxy.ChatRoom CreateChatRoom(int userId, string chatRoomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICozyChatService/CreateChatRoom", ReplyAction="http://tempuri.org/ICozyChatService/CreateChatRoomResponse")]
        System.Threading.Tasks.Task<CozyChat.TestClient.CozyChatProxy.ChatRoom> CreateChatRoomAsync(int userId, string chatRoomName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICozyChatService/DeleteChatRoom", ReplyAction="http://tempuri.org/ICozyChatService/DeleteChatRoomResponse")]
        bool DeleteChatRoom(int userId, int chatRoomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICozyChatService/DeleteChatRoom", ReplyAction="http://tempuri.org/ICozyChatService/DeleteChatRoomResponse")]
        System.Threading.Tasks.Task<bool> DeleteChatRoomAsync(int userId, int chatRoomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICozyChatService/RegisterUser", ReplyAction="http://tempuri.org/ICozyChatService/RegisterUserResponse")]
        CozyChat.TestClient.CozyChatProxy.User RegisterUser(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICozyChatService/RegisterUser", ReplyAction="http://tempuri.org/ICozyChatService/RegisterUserResponse")]
        System.Threading.Tasks.Task<CozyChat.TestClient.CozyChatProxy.User> RegisterUserAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICozyChatService/CheckLogin", ReplyAction="http://tempuri.org/ICozyChatService/CheckLoginResponse")]
        CozyChat.TestClient.CozyChatProxy.User CheckLogin(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICozyChatService/CheckLogin", ReplyAction="http://tempuri.org/ICozyChatService/CheckLoginResponse")]
        System.Threading.Tasks.Task<CozyChat.TestClient.CozyChatProxy.User> CheckLoginAsync(string name, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICozyChatService/SendMessage", ReplyAction="http://tempuri.org/ICozyChatService/SendMessageResponse")]
        bool SendMessage(int senderId, string content, System.Nullable<int> userId, System.Nullable<int> chatRoomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICozyChatService/SendMessage", ReplyAction="http://tempuri.org/ICozyChatService/SendMessageResponse")]
        System.Threading.Tasks.Task<bool> SendMessageAsync(int senderId, string content, System.Nullable<int> userId, System.Nullable<int> chatRoomId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICozyChatServiceChannel : CozyChat.TestClient.CozyChatProxy.ICozyChatService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CozyChatServiceClient : System.ServiceModel.ClientBase<CozyChat.TestClient.CozyChatProxy.ICozyChatService>, CozyChat.TestClient.CozyChatProxy.ICozyChatService {
        
        public CozyChatServiceClient() {
        }
        
        public CozyChatServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CozyChatServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CozyChatServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CozyChatServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public CozyChat.TestClient.CozyChatProxy.ChatRoom[] GetChatRooms() {
            return base.Channel.GetChatRooms();
        }
        
        public System.Threading.Tasks.Task<CozyChat.TestClient.CozyChatProxy.ChatRoom[]> GetChatRoomsAsync() {
            return base.Channel.GetChatRoomsAsync();
        }
        
        public CozyChat.TestClient.CozyChatProxy.ChatRoom CreateChatRoom(int userId, string chatRoomName) {
            return base.Channel.CreateChatRoom(userId, chatRoomName);
        }
        
        public System.Threading.Tasks.Task<CozyChat.TestClient.CozyChatProxy.ChatRoom> CreateChatRoomAsync(int userId, string chatRoomName) {
            return base.Channel.CreateChatRoomAsync(userId, chatRoomName);
        }
        
        public bool DeleteChatRoom(int userId, int chatRoomId) {
            return base.Channel.DeleteChatRoom(userId, chatRoomId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteChatRoomAsync(int userId, int chatRoomId) {
            return base.Channel.DeleteChatRoomAsync(userId, chatRoomId);
        }
        
        public CozyChat.TestClient.CozyChatProxy.User RegisterUser(string name, string password) {
            return base.Channel.RegisterUser(name, password);
        }
        
        public System.Threading.Tasks.Task<CozyChat.TestClient.CozyChatProxy.User> RegisterUserAsync(string name, string password) {
            return base.Channel.RegisterUserAsync(name, password);
        }
        
        public CozyChat.TestClient.CozyChatProxy.User CheckLogin(string name, string password) {
            return base.Channel.CheckLogin(name, password);
        }
        
        public System.Threading.Tasks.Task<CozyChat.TestClient.CozyChatProxy.User> CheckLoginAsync(string name, string password) {
            return base.Channel.CheckLoginAsync(name, password);
        }
        
        public bool SendMessage(int senderId, string content, System.Nullable<int> userId, System.Nullable<int> chatRoomId) {
            return base.Channel.SendMessage(senderId, content, userId, chatRoomId);
        }
        
        public System.Threading.Tasks.Task<bool> SendMessageAsync(int senderId, string content, System.Nullable<int> userId, System.Nullable<int> chatRoomId) {
            return base.Channel.SendMessageAsync(senderId, content, userId, chatRoomId);
        }
    }
}
